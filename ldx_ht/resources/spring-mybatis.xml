<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
	
	<!-- 1.配置数据源 -->		
	<bean id="c3p0DataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${user}"></property>
		<property name="password" value="${password}"></property>
		<property name="driverClass" value="${driver.classname}"></property>
		<property name="jdbcUrl" value="${url}"></property>
		<!--<property name="initialPoolSize" value="5"></property>-->
		<!--<property name="minPoolSize" value="5"></property>-->
		<!--<property name="maxPoolSize" value="50"></property>-->
		<!--<property name="acquireIncrement" value="5"></property>-->
<!-- 		<property name="acquireRetryAttempts" value="0"></property> -->
<!-- 		<property name="acquireRetryDelay" value="0"></property> -->
		<property name="minPoolSize" value="${minPoolSize}" />
		<property name="maxPoolSize" value="${maxPoolSize}" ></property>
		<property name="initialPoolSize" value="${initialPoolSize}" />
		<property name="acquireIncrement" value="${acquireIncrement}" ></property>
		<property name="maxIdleTime" value="${maxIdleTime}" />
		<property name="maxStatements" value="${maxStatements}" />
		<property name="idleConnectionTestPeriod" value="${idleConnectionTestPeriod}" />
		<property name="acquireRetryAttempts" value="${acquireRetryAttempts}" />
		<property name="breakAfterAcquireFailure" value="${breakAfterAcquireFailure}" />
		<property name="testConnectionOnCheckout" value="${testConnectionOnCheckout}" />
		<property name="autoCommitOnClose" value="${autoCommitOnClose}"></property>
		<property name="acquireRetryDelay" value="${acquireRetryDelay}"></property>
		<!--<property name="maxPostSize" value="${maxPostSize}"></property>-->
	</bean>
	
	<bean id="sqlSessoinFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 设置属性，数据源 -->
		<property name="dataSource" ref="c3p0DataSource"></property>
		<!-- 配置mybatis主配置文件的路径，如果不需要指定mybatis的设置，如settings，则可以不指定该文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!--mapper文件的扫描地址-->
		<property name="mapperLocations" value="classpath:ldxht/Dao/**/Mapper/*.xml"/>
		<!--别名-->
		<property name="typeAliasesPackage" value="classpath:ldxht/Pojo"></property>
	</bean>

	<!-- 配置没有把提示扫描dao接口的对象 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="ldxht.Dao**"></property>
		<!-- 该属性可以不设置，默认寻找的值为sqlSessoinFactory  -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessoinFactory"></property>
	</bean>

	<!--开启事务-->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="c3p0DataSource"></property>
	</bean>

	<tx:advice id="advice1" transaction-manager="txManager">
		<!-- 配置事务属性 -->
		<tx:attributes>
			<tx:method name="add*" read-only="false"/>
			<tx:method name="edit*" read-only="false"/>
			<tx:method name="del*" read-only="false"/>
			<tx:method name="sel*" read-only="true"/>
			<tx:method name="*" read-only="false"/>
		</tx:attributes>
	</tx:advice>

	<!-- 添加aop支持 -->
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
	
	<aop:config proxy-target-class="true">
		<aop:pointcut id="pointCut1" expression="execution(public * ldxht.Service..*.*(..))"/>
		<!-- 指定事务管理的切面（事务管理的AOP切面） -->
		<aop:advisor advice-ref="advice1" pointcut-ref="pointCut1"/>
	</aop:config>
</beans>

